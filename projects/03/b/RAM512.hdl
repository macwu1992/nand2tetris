// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=true, sel=address[6..8], a=a2, b=b2, c=c2, d=d2, e=e2, f=f2, g=g2, h=h2);

    And(a=a2, b=load, out=loadA2);
    And(a=b2, b=load, out=loadB2);
    And(a=c2, b=load, out=loadC2);
    And(a=d2, b=load, out=loadD2);
    And(a=e2, b=load, out=loadE2);
    And(a=f2, b=load, out=loadF2);
    And(a=g2, b=load, out=loadG2);
    And(a=h2, b=load, out=loadH2);

    RAM64(in=in, load=loadA2, address=address[0..5], out=outA);
    RAM64(in=in, load=loadB2, address=address[0..5], out=outB);
    RAM64(in=in, load=loadC2, address=address[0..5], out=outC);
    RAM64(in=in, load=loadD2, address=address[0..5], out=outD);
    RAM64(in=in, load=loadE2, address=address[0..5], out=outE);
    RAM64(in=in, load=loadF2, address=address[0..5], out=outF);
    RAM64(in=in, load=loadG2, address=address[0..5], out=outG);
    RAM64(in=in, load=loadH2, address=address[0..5], out=outH);

    Mux8Way16(a=outA, b=outB, c=outC, d=outD, e=outE, f=outF, g=outG, h=outH, sel=address[6..8], out=out);
}