// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux4Way(in=true, sel=address[12..13], a=a2, b=b2, c=c2, d=d2);

    And(a=a2, b=load, out=loadA2);
    And(a=b2, b=load, out=loadB2);
    And(a=c2, b=load, out=loadC2);
    And(a=d2, b=load, out=loadD2);

    RAM4K(in=in, load=loadA2, address=address[0..11], out=outA);
    RAM4K(in=in, load=loadB2, address=address[0..11], out=outB);
    RAM4K(in=in, load=loadC2, address=address[0..11], out=outC);
    RAM4K(in=in, load=loadD2, address=address[0..11], out=outD);

    Mux4Way16(a=outA, b=outB, c=outC, d=outD, sel=address[12..13], out=out);
}